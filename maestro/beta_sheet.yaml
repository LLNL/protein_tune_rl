description:
  name: sheet
  description: Study of ptrl using percentage beta sheets as reward (online)
 
env:
  variables:
    OUTPUT_PATH: ./out_beta_sheet

  dependencies:
    paths:
    - name: PYTHON
      path: /p/vast1/lee1029/self-built-miniconda3-lassen/envs/pytorch2.5-python3.9/bin/python

batch:
    type: lsf
    host: lassen
    bank: ncov2019
    queue: pbatch

study:
  - name: setup
    description: Create the config data file for each test case.
    run:
      cmd: |
         $(PYTHON) $(SPECROOT)/make_config.py -r ss_perc_sheet -o $(OPTIMIZER) -b $(BASELINE) -lr $(LR) -klw $(KLW)
      depends: []

  - name: train
    description: Train models.
    run:
      cmd: |
        #BSUB -B
        #BSUB -N
        date
        source /p/vast1/lee1029/self-built-miniconda3-lassen/bin/activate
        conda activate pytorch2.5-python3.9
        ln -s $(setup.workspace)/config_train.json .
        export MASTER_ADDR=$(jsrun --nrs 1 -r 1 hostname)
        lrun -T4 -N2 $(PYTHON) -m protein_tune_rl.tune -cf config_train.json
        date
      depends: [setup]
      walltime: "00:30"
      nodes: 2
      procs: 8
  - name: eval
    description: Evaluate models.
    run:
      cmd: |
        #BSUB -B
        #BSUB -N
        date
        source /p/vast1/lee1029/self-built-miniconda3-lassen/bin/activate
        conda activate pytorch2.5-python3.9
        ln -s $(setup.workspace)/config_eval_ref.json .
        ln -s $(setup.workspace)/config_eval_ft.json .
        ln -s $(train.workspace)/output/models .
        $(PYTHON) -m protein_tune_rl.tune -mode eval -cf config_eval_ref.json -np 1
        $(PYTHON) -m protein_tune_rl.tune -mode eval -cf config_eval_ft.json -np 1
        date
      depends: [setup, train]
      walltime: "00:15"
      nodes: 1
      procs: 1
  - name: plot
    description: Plot data from model evaluation.
    run:
      cmd: |
        conda activate pytorch2.5-python3.9
        ln -s $(eval.workspace)/output
        $(PYTHON) -m protein_tune_rl.util.plot -rm output/ref -fm output/ft -pff ss_perc_sheet
      depends: [eval]

global.parameters:
  OPTIMIZER:
    values  : [ppo, ppo, ppo, ppo, ppo, ppo]
    label   : O.%%
  BASELINE:
    values  : [mean, mean, mean, state_value, state_value, state_value]
    label   : B.%%
  LR:
    values  : [1e-5, 1e-5, 1e-5, 1e-5, 1e-5, 1e-5]
    label   : LR.%%
  KLW:
    values  : [1e-2, 1e-3, 1e-4, 1e-2, 1e-3, 1e-4]
    label   : KLW.%%



